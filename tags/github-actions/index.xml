<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>github actions on Writing Lite</title><link>/tags/github-actions.html</link><description>Recent content in github actions on Writing Lite</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 05 May 2021 14:16:16 +0000</lastBuildDate><atom:link href="/tags/github-actions/index.xml" rel="self" type="application/rss+xml"/><item><title>使用GitHub Actions自动部署hugo到GitHub Pages</title><link>/post/other/2021-05-06-%E4%BD%BF%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E5%88%B0github-pages.html</link><pubDate>Wed, 05 May 2021 14:16:16 +0000</pubDate><guid>/post/other/2021-05-06-%E4%BD%BF%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E5%88%B0github-pages.html</guid><description>之前一直使用Bitcron 来搭建人个博客，但是最近Bitcron 的官网显示，未来Bitcron 将升级到FarBox 2.0，22年底就不再支持Bitcron 了，并且不再支持几十元一年的套餐了。因此打算寻找其它方案来替代Bitcron。对于新方案的要求主要有几下几个：
支持将原有博客进行迁移 对系统环境要求低，部署方便 支持自定义域名 对Markdown支持良好，支持数学公式 经过各种权衡，选择了hugo + Github Actions + Github Pages作为最终的方案。hugo 作为博客生成工具，Github Actions将hugo生成的博客发布到Github Pages。我们要做的只是在Client将新建的博客push到Github的私有仓库，剩下的工作Github会帮助我们自动完成。下面介绍该方案的具体实现。
需要准备的环境 hugo 安装（非必需） Github 私有仓库（用来放Blog文件） Github Pages 仓库（用来存放静态页面） Step 1 , 生成hugo文件 假设上面提到的环境已经准备好，那么第一步是通过hugo生成一个hugo网站的文件夹。下面的命令可以生成一个blog的文件夹；
hugo new blog 如果没有安装hugo的话，可以在github上clone一个hugo网站的项目。
Step 2，设置Blog仓库 这里假设我们的Github私有仓库的名称也是blog，那么首先，将本地blog文件夹与blog仓库进行关联；然后开始设置Github Actions，方式是在blog目录下新建文件.github/workflows/hugo_deploy.yml，具体内容如下：
name: Deploy Blog on: push: branches: - main jobs: build: # 一项叫做build的任务 runs-on: ubuntu-18.04 # 在最新版的Ubuntu系统下运行 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .</description></item></channel></rss>