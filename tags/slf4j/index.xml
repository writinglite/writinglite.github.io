<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>slf4j on Writing Lite</title><link>/tags/slf4j/</link><description>Recent content in slf4j on Writing Lite</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 06 Apr 2017 21:57:00 +0000</lastBuildDate><atom:link href="/tags/slf4j/index.xml" rel="self" type="application/rss+xml"/><item><title>Guice注入SLF4J</title><link>/post/java/2017-04-06-guice%E6%B3%A8%E5%85%A5slf4j/</link><pubDate>Thu, 06 Apr 2017 21:57:00 +0000</pubDate><guid>/post/java/2017-04-06-guice%E6%B3%A8%E5%85%A5slf4j/</guid><description>创建注解 import javax.inject.Scope; import java.lang.annotation.Documented; import java.lang.annotation.Retention; import java.lang.annotation.Target; import static java.lang.annotation.ElementType.FIELD; import static java.lang.annotation.RetentionPolicy.RUNTIME; @Scope @Documented @Retention(RUNTIME) @Target(FIELD) public @interface Log { } 自定义MembersInjector import com.google.inject.MembersInjector; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import java.lang.reflect.Field; public class SLF4JMembersInjector&amp;lt;T&amp;gt; implements MembersInjector&amp;lt;T&amp;gt; { private final Field field; private final Logger logger; public SLF4JMembersInjector(Field field) { this.field = field; this.logger = LoggerFactory.getLogger(field.getDeclaringClass()); field.setAccessible(true); } public void injectMembers(T t) { try { field.set(t, logger); } catch (IllegalAccessException e) { throw new RuntimeException(e); } } } 创建TypeListener import project.</description></item></channel></rss>